#include <libcpprime/IsPrime.hpp>
#include <libcpprime/IsPrimeNoTable.hpp>

#define _ARG16(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, ...) _15
#define HAS_COMMA(...)                                                                    _ARG16(__VA_ARGS__, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
#define _TRIGGER_PARENTHESIS_(...)                                                        ,

#define ISEMPTY(...)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \
    _ISEMPTY(                                              /* test if there is just one argument, eventually an empty    \
             one */                                                                                                                                                                                                                                                                                                                                                                                        \
             HAS_COMMA(__VA_ARGS__),                       /* test if _TRIGGER_PARENTHESIS_ together with the argument   \
             adds a comma */                                                                                                                                                                                                                                                                                                                                                                                        \
             HAS_COMMA(_TRIGGER_PARENTHESIS_ __VA_ARGS__), /* test if the argument together with a parenthesis           \
             adds a comma */                                                                                                                                                                                                                                                                                                                                                                                        \
             HAS_COMMA(__VA_ARGS__(/*empty*/)),            /* test if placing it between _TRIGGER_PARENTHESIS_ and the   \
             parenthesis adds a comma */                                                                                                                                                                                                                                                                                                                                                                                        \
             HAS_COMMA(_TRIGGER_PARENTHESIS_ __VA_ARGS__(/*empty*/)))

#define PASTE5(_0, _1, _2, _3, _4) _0##_1##_2##_3##_4
#define _ISEMPTY(_0, _1, _2, _3)   HAS_COMMA(PASTE5(_IS_EMPTY_CASE_, _0, _1, _2, _3))
#define _IS_EMPTY_CASE_0001        ,

#if !ISEMPTY(LIBCPPRIME_CONSTEXPR)
// clang-format off
constexpr std::uint64_t Primes[] = {
687141641115473u,16769835969299249u,7583119613844569477u,231818087039123401u,519090546392586919u,22768123214968429u,1288453552054029799u,3439727636278849u,1049219755382219u,776459942432899u,8269591345877497u,7499524863167947u,160485378966412723u,68013930522443513u,628716755750453533u,2149922960065525409u,2221168933603u,7768333339088623537u,10877241043u,30441276583877573u,2944737531467513u,190250684112650521u,3991371376299554449u,77832927433588049u,117079171086720589u,7762044268091591u,832677660634663u,18545456154258343u,11146174537u,152237684171195459u,202954474542459083u,685636915790814913u,46960696712947249u,2447280223388393u,13831481684323307u,7119398587462661u,458928702193507079u,3380510634845679221u,71068188146195167u,39766364677382611u,434365126319867u,22009916895521u,190813629250908439u,7246903907910259u,8319302783980273u,64813452104663609u,1262239558511861u,1112322746698812751u,2381354778610469u,1677854080334140967u,
17903428355584196279u,298341042309996883u,133300273673334191u,3580674103647881657u,112390058704029791u,922535005684151u,9319255174307713u,2589961668146390371u,3273409589426231u,15458114607212261u,3561198312258640217u,2482822053123073171u,819443731449559u,1876477828087067u,180215735115537923u,12036645301490399u,283101630477841729u,17015004523646332657u,17819387124650689u,977067379183387u,190149135643861913u,2113324185444107u,801105543035551519u,3786202988917u,5063076056987209u,639376334589232369u,17701302222619877929u,109558200319u,2435407451175926921u,3860322684460116263u,3540020630491393u,922200012189199u,15441919406891999303u,5053092617365747u,34863047429976001u,606798821525669u,373788518758714931u,6972848981442347u,301085486660947343u,567623538593481763u,3288130493167112759u,525570683724436079u,27447102181573117u,493165444928867u,228188232671284607u,41981u,153459079030589777u,96261348158636329u,957138529960247u,4684342611594001u,
122784120178014223u,1751765321659343u,9274968299157677u,368411833068428771u,13254382319u,16191924853216901u,285425620963439497u,1874611872382481u,2870137440785339u,8944467295055051u,13508693592999323617u,617691627663949u,8024126509467683u,1686647102102146367u,15555783998699363u,5312772269621356187u,13092307913981410189u,388291094977298083u,3800864999222729u,96093914204396189u,4672179164546236087u,828233360300974283u,1563416105462633u,112168704118566869u,8934657636850169383u,3972184655038163u,119212662404615651u,28149940364458169u,2614322611367u,13433007947516231u,155945055464803487u,3790777492627379u,81395868551943553u,13578381323145371u,88433169100489561u,348042081055878647u,21505853050257481u,7760088104542229u,8490487222067567u,1059961358485657u,15942403844265013u,83668199u,996713786245665937u,25215229937438977u,6092029225708542539u,79122269421449329u,1727938282784341u,1340728086927553u,2493089457173899u,1740480102594071u,
4135976860231u,249872685876472273u,8077501502382523u,28982549409601u,4808504015959507u,1001475975448967u,143648194957120157u,44949408032597797u,61293942700178267u,1573795030417654687u,4100886701116757u,1147441899567577u,251816604826873447u,2783445716868911u,1855049328972642617u,2986015771689859u,1077451249436303767u,337545799875055991u,197102939471624533u,1267634817286373u,11635300436295209u,1081785139u,14847136638270847331u,124794038743242569u,2010881424996256271u,12413104224346117u,7531643205744769u,1043511315585847u,1120373764848537371u,168741118595333u,53123150184217871u,1084169874727997u,712152660097350331u,41021523399595441u,34135444980059411u,7985916342918158327u,268005194192467801u,16993691503u,2342501651528534803u,1660481173566263u,1894129529095471u,108771132369013211u,1994217030913u,95241340135927259u,988940900844576067u,123466988538638231u,576602322837173u,442980714066588253u,7542163225431599u,1836602604755080661u,
429014461638281951u,5343371419422521u,152895788075775799u,3785774532272233u,460867086514059257u,503800906451525471u,16570002031588991u,4327789300472008517u,4105249079558839u,215820113375267561u,6749341192600033u,16086132607929417643u,1009449046170553u,122337853487u,969525567013229u,25832341310313047u,188631900867799u,15055208942048566927u,122660565240883u,10674041893438769u,5244683779u,53941461743284553u,4294583821637528399u,8453853993059250211u,516122009797165423u,2905519652849307157u,140615327u,3135452651571277u,1275995997181u,3626716755182203u,8548479983333u,819748170629606243u,568057356909239u,34240994208499207u,14575184589900491u,19806283448253431u,8027921566237u,23583576984441923u,3728230628305367u,15063184586188448581u,99414459280341269u,231901980630667357u,135100779062599901u,174387009211255327u,360401430182730371u,68716705899524807u,70965608833487887u,2857643943016063u,579514817746083491u,798634993361129u,
};
constexpr std::uint64_t Composites[] = {
14672124794340421u,900042603245415001u,51875113055103017u,1881727296520501u,7099184335070238071u,5218568129333341u,694897332147883801u,92828184625294561u,27444065645706277u,21844552074922099u,298708083157009u,43007512580768737u,67924464158721637u,1136518449869449u,942u,282158676238319053u,3974559538503642097u,778434677267248321u,195293092865291041u,2596047954720892057u,2651u,59453140740436921u,117063589473945577u,127186570001u,723794077905553u,16763868948727884817u,4857852365345238451u,3612174765592433u,17072568793504811407u,11246983944020453u,168567797636127761u,17408958835955917u,2099373105116287u,1759077447972127u,9215197854549121u,899128479265973u,160852733966871091u,4142963634383521u,1189191051633151u,6554u,597052415167u,3298656519701192341u,18286802730865117u,226429006815906389u,356934800039123u,174740399093661881u,8577194979091u,6263275012991401u,13815561833217455221u,60876u,
412857922887610201u,7763008816821961u,1955580616560997u,8030075790037258801u,130776644467u,1009389736143694621u,26605619723340881u,2229371773772090041u,2560152474811u,19623866160688561u,1328169693062327737u,65520529653807313u,7123472865202591u,43184706204357781u,1300273646350141u,35682122491465231u,9171444889u,32453703024138001u,7533807580751u,9114445864287541u,1245365931356033u,23148577577809909u,169635627264582109u,213263695392594217u,17548125650712105281u,144033395235310769u,104822461751771233u,34864601954720419u,1789479645111781u,693070050753607463u,768761493833u,1241324172031u,724635526615847857u,2613267551412493u,187311609837571969u,2847792245315700709u,1547823508023324433u,16711055382746033u,2748893505158161u,471050701564097471u,118814168952511u,25132999593628477u,7630939225455941u,133475511773046061u,104750149265556367u,39881u,250643935087939849u,12252227278716596033u,2396240867322796537u,1205534130675097u,
12903347539864651u,968698587856861u,9489712805421913u,6947380217232343u,18611u,33511527335186753u,7406225312240909u,65055569u,10491995045763730801u,28629331687227961u,76731290252200693u,4272674931252001u,94146205675940081u,74915524301u,296086550278668059u,157683191152540699u,28538u,1192022022859471u,6717786460861436491u,25213293636301u,970084251108241u,1020344161788123901u,5272963967048917u,365311845947541661u,3412594226158457u,5998932705321864661u,4181065055232073u,57562754834500001u,335432728040167081u,6761734168925633u,940108745266330513u,26140550541991u,60688139u,16732235698562533u,1017087746041u,7182322721869873u,29163u,2893559021029601u,1350568900169441u,224539111881775351u,28501209318430301u,683560154264088377u,4398012825601u,5312825154453029u,268273700898220721u,1253771982499091u,3608471429796001u,958544393602038931u,635125835536530001u,4291867684096601u,
639040027848307u,61018u,46830547090291393u,705645494365069u,97550336296574533u,1613604415540579673u,482904741251037437u,1311829940233u,36205338745129681u,12610952223149354971u,2145251676842939839u,648905379588451u,4047614624657089u,6593585032081321u,323272657504733549u,1645148611782341u,50311354261741u,41509u,4310646896111261u,3775076969137u,2442375676633u,1025884730862552431u,2459769839593u,72785750054049523u,51881504184678097u,110737659857u,13911476232353701u,2696791715281u,1574905679165843u,2559853131656528683u,471113755459987u,345430125048135209u,5391779414179013021u,60636986677471847u,3233741472416911u,310158572307870001u,4138810093901254001u,6719149981509529u,30231573437010763u,1520665732578499501u,3140698381917295253u,1639718568225990181u,167402421045647933u,5981446086126787021u,41255815274737057u,42901463500443877u,629527566627793u,44807552013163501u,1443175070239u,56601080453u,
5695143427674644329u,2278346717693018627u,330732903239926951u,1043356288849621u,2042304881474915713u,13972013232483812963u,163149913301035501u,258291104317637u,9340092333467699u,17938376261538707017u,159344957223762913u,1012368832628401u,4489097574244591u,2298700697312694793u,18491063544260323u,16023293955756409u,110086765928710453u,296846329795723u,15207513896314860251u,3626421490024639u,36001695374737u,9002653852995161u,435532185915789653u,42671219483517697u,72715603138421041u,4714256888651668801u,3071611335384214837u,2031665410405u,8010064534407931471u,480220766958132197u,46424214656314717u,1411124721981982453u,203329864142779321u,509742000336199051u,10319431251755341u,5129896656791809u,10106287937101u,14055523083729283u,160288855001402789u,17367490938930894169u,24177473003u,114292784058508061u,44923392403241893u,5627967567047009297u,908917512557437u,17207638733u,5377693688547881u,250777775523430711u,1407729782835487u,20040505002437333u,
};
// clang-format on
constexpr bool ConstexprTest = []() {
    bool flag = true;
    for (std::uint32_t i = 0; i != 250; ++i) {
        flag &= cppr::IsPrime(Primes[i]);
        flag &= cppr::IsPrimeNoTable(Primes[i]);
        flag &= !cppr::IsPrime(Composites[i]);
        flag &= !cppr::IsPrimeNoTable(Composites[i]);
    }
    return flag;
}();
static_assert(ConstexprTest);
#endif
